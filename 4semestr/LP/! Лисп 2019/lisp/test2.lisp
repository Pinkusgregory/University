(print (format NIL "Чтение файла")) 
(with-open-file (stream "F:/lisp/in17.txt" :direction :input)
	(let ((x (parse-integer(read-line stream)))
		(a1 (parse-integer(read-line stream))) 
		(b1 (parse-integer(read-line stream))) 
		(c1 (parse-integer(read-line stream))) 
		(a2 (parse-integer(read-line stream))) 
		(b2 (parse-integer(read-line stream))) 
		(c2 (parse-integer(read-line stream))))
	(defun f17(a b c x) (- (* a (expt x 3)) (* b (expt x 2)) c)) 
	(defun y17 (x) (/ (f17 a1 b1 c1 x) (f17 a2 b2 c2 x)))
	(setq y (y17 x))))
 (with-open-file (stream "F:/lisp/out17.txt" :direction :output :if-exists :supersede) 
(format stream "~$" y)) 
