(print (format NIL "Чтение файла")) 
(with-open-file (stream "F:/lisp/in24.txt" :direction :input)
(let ((a1 (parse-integer(read-line stream))) 
		(b1 (parse-integer(read-line stream))) 
		(c1 (parse-integer(read-line stream))) 
		(a2 (parse-integer(read-line stream))) 
		(b2 (parse-integer(read-line stream))) 
		(c2 (parse-integer(read-line stream)))
		(a3 (parse-integer(read-line stream))) 
		(b3 (parse-integer(read-line stream))) 
		(c3 (parse-integer(read-line stream))) 
		(a4 (parse-integer(read-line stream))) 
		(b4 (parse-integer(read-line stream))) 
		(c4 (parse-integer(read-line stream))))
	(defun f24(n k m) (sin (- (/ (* pi n) k) m)))
	(defun y24() (/ (- (* 7 (f24 a1 b1 c1)) (* 5 (f24 a2 b2 c2))) (+ (* 5 (f24 a3 b3 c3)) (* 2 (f24 a4 b4 c4)) 0.8))) 
	(setq y (y24))))
 (with-open-file (stream "F:/lisp/out24.txt" :direction :output :if-exists :supersede) 
(format stream "~$" y)) 
