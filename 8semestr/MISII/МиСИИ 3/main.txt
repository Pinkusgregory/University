:- op(100,xfy,'::'). 

решить1(X):- генерировать_решение(X), проверить_ограничения(X). 
решить2(X):- проверить_ограничения(X), генерировать_решение(X). 

генерировать_решение([P1::C1,P2::C2,P3::C3,P4::C4]):- 
    перестановка([P1,P2,P3,P4],[боря,витя,гриша,егор]),
    перестановка([C1,C2,C3,C4],[тверь,омск,томск,казань]). 

проверить_ограничения(Решение) :- 
    not(member(боря::казань,Решение)), 
    not(member(боря::тверь,Решение)),
    not(member(боря::томск,Решение)), 
    not(member(гриша::тверь,Решение)),
    not(member(гриша::казань,Решение)), 
    not(member(егор::тверь,Решение)). 

предшествует(X,Y,[X|T]):- 
    member(Y,T). 
предшествует(X,Y,[_|T]):- 
    предшествует(X,Y,T). 

перестановка([],[]). 
перестановка([X|L],P):- 
    перестановка(L,L1), 
    вставить(X,L1,P). 

вставить(X,L1,L2):- 
    удалить(X,L2,L1). 

удалить(X,[X|T],T). 
удалить(X,[Н|T],[Н|T1]):- 
    удалить(X,T,T1). 

повторять(Цель,1):- 
    Цель. 
повторять(Цель,N):- 
    not(not(Цель)), 
    M is N-1, 
    повторять(Цель,М).

вывод_табл([P1::C1,P2::C2,P3::C3,P4::C4]) :- 
    write( '|---------------------|'),nl, 
    writef('|%10L|%10L|',[P1,C1]),nl, 
    write( '|---------------------|'),nl, 
    writef('|%10L|%10L|',[P2,C2]),nl, 
    write( '|---------------------|'),nl, 
    writef('|%10L|%10L|',[P3,C3]),nl,
    write( '|---------------------|'),nl, 
    writef('|%10L|%10L|',[P4,C4]),nl,
    write( '|---------------------|').
  
:- 
    %генерировать_решение(X),
    time(повторять(решить1(X),1000)),nl, 
    вывод_табл(X),nl, 
    halt. 